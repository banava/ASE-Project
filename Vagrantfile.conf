ENV['AWS_ACCESS_KEY_ID'] = 'F00-b@r2019'
ENV['AWS_SECRET_ACCESS_KEY'] = '#D0nt_t3ll!!'
ENV['VAGRANT_DEFAULT_PROVIDER'] = 'aws'
# Following variable ensures sequential start up of VMs
ENV['VAGRANT_NO_PARALLEL'] = 'true'
Vagrant.require_version ">= 1.8.0"

Vagrant.configure("2") do |config|

  # AWS configuration
   config.vm.provider :aws do |aws, override|
    # Read AWS credentials
    aws.access_key_id = ENV['AWS_ACCESS_KEY_ID']
    aws.secret_access_key = ENV['AWS_SECRET_ACCESS_KEY']

    aws.region = "boise-idaho"
    aws.availability_zone = "so_west-idaho"

    # t2.micro instance = 1x vCPU with 1GB RAM
    aws.instance_type = "t2.micro"

    aws.security_groups = ['ase-iac-lab']

    aws.keypair_name = "ase-iac-lab"
    override.ssh.username = "banava"
    override.ssh.private_key_path = "~/keys/ase-iac-lab.pem"

    # Workaround for the Vagrant and EC2 error: "No host IP was 
    # given to the Vagrant core NFS helper."
    override.nfs.functional = false
    
    aws.tags = {
      'Name'   => 'Vagrant'
    }
    # Vagrant plugin requires presence of a dummy Vagrant box
    # that does nothing
     override.vm.box = "aws-dummy"
  end
  # Create VM with Amazon Machine Image (AMI)
   config.vm.define "ase-server" do |config|
      config.vm.provider :aws do |aws|
        aws.ami = "ami-c06b1eb3"
      end
    #Install Docker
      config.vm.provision :shell, :path => "docker-install-script.sh"
   end

  # Use Docker in Vagrant for a Ghost blog behind NGINX
  # ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'  
    
  # Defining Ghost app container called "ghostapp" 
    config.vm.define "ghoastapp" do |ghostapp|
      app.vm.provider "docker" do |docker|
       docker.name = "ghostapp"
       docker.image = "ghost:0.9.0"
      end
    end

    # Defining front facing container called "ffcontain" 
    config.vm.define "ffcontain" do |ffcontain|
      foobar.vm.provider "docker" do |docker|
        docker.image = "nginx:stable"
        docker.port = ['80:80']
        docker.volumes = ["#{Dir.pwd}/nginx.conf:/etc/nginx/conf.d/default.conf"]
       docker.link("ffcontain:ghostapp")
      end
    end

  
